package {		//import any necessary files/libraries	import flash.display.Sprite;	import flash.events.Event;	import flash.geom.Point;	import ReusableCode.MyMaths;	//import Turret;		//make the class	public class Ship extends Sprite {				//tell the class what properties it has		protected var speed:int;		protected var timeToTarget:int;		public var target:Point;		public var health:int;		public var radius:Number=8.5;				//a static property to count all ships spawned		private static var numShips:int = 0;				//constructor		public function Ship() 		{			numShips++;//increase total amount of ships by one each time a ship is spawned			//trace("You have spawned "+numShips+" total ships.");			//set the speed to a random value between 2 and 7			speed=2+Math.random()*5;			//set the ship health			health=1;			//set time to target			timeToTarget=0;			//trace("Made a Ship!")			//set the target location of the ship			target = new Point(Math.random()*500, Math.random()*500);					}				public function update() 		{			timeToTarget++;//increase the counter for time spent moving			// determine where ship wants to face			var desiredRotation = MyMaths.angleBetween(this, target);			//get the difference between desired rotation and actual rotation			var angleDiff = desiredRotation-rotation;			//wrap value between -180 and 180			while (angleDiff>180) angleDiff-=360;			while (angleDiff<-180) angleDiff+=360;			//if we need to turn right			if(angleDiff>2) 			{				//turn right				rotation = rotation+2;			}			//if we need to turn left			if(angleDiff<-2) 			{				//turn left				rotation = rotation-2;			}			//move in direction ship is facing			MyMaths.moveForward(this, speed);			//calculate distance to target point			var hyp = MyMaths.distanceBetween(target, this)			//if the hypotenuse(hyp) is less than 5 pixels pick a new target			if (hyp < 20 || timeToTarget>=500){				target.x = Math.random()*500;				target.y = Math.random()*500;				timeToTarget=0;			}					}					}	}