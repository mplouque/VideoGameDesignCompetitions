package  {		import flash.display.MovieClip;	import flash.events.Event;	import fl.transitions.TweenEvent;	import fl.transitions.easing.*;	import flash.events.Event;	import fl.transitions.Tween;	import flash.events.MouseEvent;	import flash.system.System;				public class Game extends MovieClip 	{		private var targetFrame:String;		private var tweens:Array;				public function Game() 		{			targetFrame="Menu";		}				private function gotoLabel(desiredLabel:String)		{			for (var i=0; i<currentLabels.length; i++)			{				if (currentLabels[i].name == desiredLabel) 				{					gotoAndPlay(desiredLabel);					return;				}			}		}				private function startTowerDefense(m:MouseEvent) 			{				targetFrame="LevelSelect";				tweenOut();			}		private function startTrack(m:MouseEvent)		{			if(trackType==1 || trackType==2 || trackType==3)			{				targetFrame="game";				btnStartTrack.removeEventListener(MouseEvent.CLICK, startTrack);				tweenOut();			}			else			{				trace("no level selected");			}		}		private function goToInstructions(m:MouseEvent)		{			targetFrame="Instructions";			tweenOut();		}		private function goToMenu(m:MouseEvent)		{			targetFrame="Menu";			tweenOut();		}		private function tweenIn() 		{						//make tweens a new array			tweens = new Array();			//loop through all on screen content			for (var i=0; i<numChildren; i++)			{				//make a reference to the current object				var ob = getChildAt(i);				//make a tween for the current object				var tw:Tween = new Tween(ob, //onject to tween										 "z", ///property to tween										 Elastic.easeInOut, //easing function to use										 ob.z-stage.stageWidth, //start value										 ob.z, //end value										 20+(i*5)); //time to take 				//add the tween to the list of tweens				tweens.push(tw);									 			}		 }		private function tweenInInstructions() 		{			//make tweens a new array			tweens = new Array();			//loop through all on screen content			for (var i=0; i<numChildren; i++)			{				//make a reference to the current object				var ob = getChildAt(i);				//make a tween for the current object				var tw:Tween = new Tween(ob, //onject to tween										 "x", ///property to tween										 Elastic.easeInOut, //easing function to use										 ob.x+stage.stageWidth, //start value										 ob.x, //end value										 15+(i*5)); //time to take 				//add the tween to the list of tweens				tweens.push(tw);									 			}		}		 private function tweenOut() 		{ //yoyo the existing tweens		  //loop through all on screen content			for (var i=0; i<tweens.length; i++)			{				//yoyo the tweens 				tweens[i].yoyo();				//if this is the last tween				if (i==tweens.length-1)				{					tweens[i].addEventListener(TweenEvent.MOTION_FINISH, tweenedOut);				}			}		}				private function tweenedOut(t:TweenEvent)		{			System.gc();			gotoLabel(targetFrame);					}	}	}