package{	import flash.display.DisplayObject;	import flash.display.MovieClip;	import flash.events.Event;		public class Engine extends MovieClip	{		private static var _instance:MovieClip;				public function Engine()		{			stop();			_instance = this;		}				public static function add(object:Object):void		{			if (object!=DisplayObject) return;			_instance.addChild(object as DisplayObject);		}				public static function remove(object:Object):void		{			if (object is Array) {				removeList(object as Array);				return;			}			if (!(object is DisplayObject) || object.parent!=_instance) return;			_instance.removeChild(object as DisplayObject);		}				public static function removeList(objects:Array):void		{			while (objects.length>0) remove(objects.pop());			//trace(objects.length);					}				public static function getByName(name:String):Object {			if (_instance) {				for (var i:int = 0; i < _instance.numChildren; i++) 				{					if (_instance.getChildAt(i).name==name) {						return _instance.getChildAt(i);					}				}			}			return null;		}				public static function getAllByName(name:String):Array {			var list:Array = new Array();			if (_instance) {				for (var i:int = 0; i < _instance.numChildren; i++) 				{					if (_instance.getChildAt(i).name==name) {						list.push(_instance.getChildAt(i));					}				}			}			return list;		}				public static function getByClass(className:Class):Object {			if (_instance) {				for (var i:int = 0; i < _instance.numChildren; i++) 				{					if (_instance.getChildAt(i) is className) {						return _instance.getChildAt(i);					}				}			}			return null;		}				public static function getAllByClass(className:Class):Array {			var list:Array = new Array();			if (_instance) {				for (var i:int = 0; i < _instance.numChildren; i++) 				{					if (_instance.getChildAt(i) is className) {						list.push(_instance.getChildAt(i));					}				}			}			return list;		}				public static function hitTestName(object:DisplayObject, name:String):Object		{			var list:Array = getAllByName(name);			return hitTestList(object, list);		}				public static function hitTestClass(object:DisplayObject, className:Class):Object		{			var list:Array = getAllByClass(className);			return hitTestList(object, list);		}				public static function hitTestList(object:DisplayObject, list:Array):Object		{			var hits:Array = new Array();			for (var i:int=0; i<list.length; i++) {				if (object != list[i] && object.hitTestObject(list[i])) {					hits.push(list[i]);				}			}			return hits;		}					}}